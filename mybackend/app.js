const express = require('express')
const { NmapScan } = require('./nodenmap')
const app = express()
const port = 5000

//Declare variables that changes across functions
var nmapProgress = {}
var NewNmapScan = null

app.get('/NmapScanProgress', (req, res) => {
  //Send the progress of the scan back
  res.send(nmapProgress)
})

app.get('/startSingleNmapScan', (req, res) => {
  var nmap = require('./nodenmap');
  nmap.nmapLocation = "nmap"; //default location

  console.log(req.query.IPAddressToPing)
  NewNmapScan = new nmap.VersionScanWithProgress(req.query.IPAddressToPing);
 
  NewNmapScan.on('complete', function(data){
    res.send(data)
    nmapProgress = {}
    NewNmapScan = null
    console.log('Scan Completed')
  });

  NewNmapScan.on('progressUpdate', function(data){
    dataString = data.toString()
    console.log(dataString)
    var parseString = require('xml2js').parseString;
    parseString(data, function (err, result) {
      nmapProgress = result
  });
  });
    
  NewNmapScan.on('error', function(error){
    console.log(error);
    nmapProgress = {}
  });

    
  console.log('Starting Scan')
  NewNmapScan.startScan();
})

app.get('/startHostDiscoveryNmapScan', (req, res) => {
  var nmap = require('./nodenmap');
  nmap.nmapLocation = "nmap"; //default location

  var IPAddressWithSubnetMask = req.query.IPAddressToPing + req.query.subnetMask

  console.log(IPAddressWithSubnetMask)

  NewNmapScan = new nmap.HostDiscoveryScanWithProgress(IPAddressWithSubnetMask);
 
  NewNmapScan.on('complete', function(data){
    res.send(data)
    nmapProgress = {}
    NewNmapScan = null
    console.log('Scan Completed')
  });

  NewNmapScan.on('progressUpdate', function(data){
    dataString = data.toString()
    console.log(dataString)
    var parseString = require('xml2js').parseString;
    parseString(data, function (err, result) {
      nmapProgress = result
  });
  });
    
  NewNmapScan.on('error', function(error){
    console.log(error);
    res.send(error)
    nmapProgress = {}
  });

    
  console.log('Starting Scan')
  NewNmapScan.startScan();
})

app.get('/cancelNmapScan', (req, res) => {
  var nmap = require('./nodenmap');
  if (NewNmapScan) {
    NewNmapScan.cancelScan()

    NewNmapScan.on('error', function(message) {
      res.send(message)
    })
  } 
  console.log("No nmap scan active")
  nmapProgress = {}
})

app.listen(port, () => {
  console.log(`Example app listening at http://localhost:${port}`)
})